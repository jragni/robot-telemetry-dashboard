name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint:strict
    
    - name: Run type checking
      run: npm run typecheck
    
    - name: Run unit tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run accessibility tests
      run: npm run test:a11y
    
    - name: Upload accessibility results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-results
        path: accessibility-report/

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build application
      run: npm run build
    
    - name: Run Playwright tests
      run: npm run test:e2e
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: npm run test -- __tests__/performance/
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: performance-report/

  coverage-check:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Check coverage thresholds
      run: |
        # Parse coverage results and fail if below thresholds
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        if (( $(echo "$COVERAGE < 99" | bc -l) )); then
          echo "Coverage $COVERAGE% is below 99% threshold"
          exit 1
        fi
        echo "Coverage $COVERAGE% meets requirements"
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        message: |
          ## Test Coverage Report
          
          | Metric | Percentage | Status |
          |--------|------------|--------|
          | Lines | ![Lines](https://img.shields.io/badge/Coverage-${{ env.LINES }}%25-green) | âœ… |
          | Functions | ![Functions](https://img.shields.io/badge/Functions-${{ env.FUNCTIONS }}%25-green) | âœ… |
          | Branches | ![Branches](https://img.shields.io/badge/Branches-${{ env.BRANCHES }}%25-green) | âœ… |
          | Statements | ![Statements](https://img.shields.io/badge/Statements-${{ env.STATEMENTS }}%25-green) | âœ… |
          
          [ðŸ“Š Detailed Coverage Report](https://app.codecov.io/gh/${{ github.repository }}/pull/${{ github.event.number }})

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  quality-gate:
    runs-on: ubuntu-latest
    needs: [unit-tests, accessibility-tests, e2e-tests, coverage-check]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.unit-tests.result }}" != "success" || \
              "${{ needs.accessibility-tests.result }}" != "success" || \
              "${{ needs.e2e-tests.result }}" != "success" || \
              "${{ needs.coverage-check.result }}" != "success" ]]; then
          echo "One or more test jobs failed"
          exit 1
        fi
        echo "All tests passed! âœ…"